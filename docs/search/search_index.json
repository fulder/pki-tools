{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Pki-tools Index","text":"<p>Auto-generated documentation index.</p> <p>A full list of Pki-tools project modules.</p> <ul> <li>Pki Tools<ul> <li>Crl</li> <li>Exceptions</li> <li>Ocsp</li> <li>Types</li> </ul> </li> </ul>"},{"location":"pki_tools/","title":"Pki Tools","text":"<p>Pki-tools Index / Pki Tools</p> <p>Auto-generated documentation for pki_tools module.</p>"},{"location":"pki_tools/#cert_from_pem","title":"cert_from_pem","text":"<p>Show source in init.py:15</p> <p>Loads a certificate from a PEM string into a x509.Certificate object</p>"},{"location":"pki_tools/#arguments","title":"Arguments","text":"<ul> <li><code>cert_pem</code> - The PEM encoded certificate in string format</li> </ul>"},{"location":"pki_tools/#returns","title":"Returns","text":"<p>A x509.Certificate created from the PEM</p>"},{"location":"pki_tools/#raises","title":"Raises","text":"<p>exceptions.CertLoadError - If the certificate could not be loaded</p>"},{"location":"pki_tools/#signature","title":"Signature","text":"<pre><code>def cert_from_pem(cert_pem: str) -&gt; x509.Certificate: ...\n</code></pre>"},{"location":"pki_tools/#is_revoked","title":"is_revoked","text":"<p>Show source in init.py:36</p> <p>Checks if a certificate is revoked using first OCSP and then CRL extensions. The <code>issuer_cert</code> argument is only needed when OCSP is available and should be checked.</p> <p>Note that OCSP has precedence to CRL meaning that if OCSP check is successful this function will return the bool without checking CRL.</p> <p>Otherwise, if OCSP check fails, CRL will be tried next.</p>"},{"location":"pki_tools/#arguments_1","title":"Arguments","text":"<ul> <li><code>cert</code> - The certificate to check revocation for. Can either be a x509.Certificate or a types.PemCert string</li> <li><code>issuer_cert</code> - [OCSP Only] The issuer of the <code>cert</code>. Can be a x509.Certificate, a types.PemCert string or types.OcspIssuerUri including the URI to the issuer public cert</li> <li><code>crl_cache_seconds</code> - [CRL Only] Specifies how long the CRL should be cached, default is 1 hour.</li> </ul>"},{"location":"pki_tools/#returns_1","title":"Returns","text":"<p>True if the certificate is revoked, False otherwise</p>"},{"location":"pki_tools/#raises_1","title":"Raises","text":"<ul> <li><code>exceptions.OcspFetchFailure</code> - When OCSP fails preforming the check against the server</li> <li><code>exceptions.OcspIssuerFetchFailure</code> - When <code>issuer_cert</code> is of exceptions.OcspIssuerUri type and fetching the public certificate fails</li> <li><code>exceptions.CrlFetchFailure</code> - When the CRL could not be fetched</li> <li><code>exceptions.CrlLoadError</code> - If CRL could be fetched successfully but could not be loaded e.g. due invalid format or file</li> <li><code>exceptions.Error</code> - If revocation check fails both with OCSP and CRL</li> </ul>"},{"location":"pki_tools/#signature_1","title":"Signature","text":"<pre><code>def is_revoked(\ncert: Union[x509.Certificate, types.PemCert],\nissuer_cert: Union[x509.Certificate, types.PemCert, types.OcspIssuerUri] = None,\ncrl_cache_seconds: int = 3600,\n) -&gt; bool: ...\n</code></pre>"},{"location":"pki_tools/#pem_from_cert","title":"pem_from_cert","text":"<p>Show source in init.py:32</p>"},{"location":"pki_tools/#signature_2","title":"Signature","text":"<pre><code>def pem_from_cert(cert: x509.Certificate) -&gt; str: ...\n</code></pre>"},{"location":"pki_tools/#read_from_file","title":"read_from_file","text":"<p>Show source in init.py:108</p> <p>Reads a file containing a PEM certificate into a x509.Certificate object.</p>"},{"location":"pki_tools/#arguments_2","title":"Arguments","text":"<ul> <li><code>file_path</code> - Path and filename of the PEM certificate</li> </ul>"},{"location":"pki_tools/#returns_2","title":"Returns","text":"<p>A x509.Certificate representing the certificate from file</p>"},{"location":"pki_tools/#signature_3","title":"Signature","text":"<pre><code>def read_from_file(file_path: str) -&gt; x509.Certificate: ...\n</code></pre>"},{"location":"pki_tools/#save_to_file","title":"save_to_file","text":"<p>Show source in init.py:90</p> <p>Saves a certificate into a file</p>"},{"location":"pki_tools/#arguments_3","title":"Arguments","text":"<ul> <li><code>cert</code> - The certificate to save to the <code>file_path</code>. Can either be a x509.Certificate or a types.PemCert string</li> <li><code>file_path</code> - Path and filename where to store the certificate</li> </ul>"},{"location":"pki_tools/#signature_4","title":"Signature","text":"<pre><code>def save_to_file(cert: Union[x509.Certificate, types.PemCert], file_path: str): ...\n</code></pre>"},{"location":"pki_tools/#modules","title":"Modules","text":"<ul> <li>Crl</li> <li>Exceptions</li> <li>Ocsp</li> <li>Types</li> </ul>"},{"location":"pki_tools/crl/","title":"Crl","text":"<p>Pki-tools Index / Pki Tools / Crl</p> <p>Auto-generated documentation for pki_tools.crl module.</p>"},{"location":"pki_tools/crl/#is_revoked","title":"is_revoked","text":"<p>Show source in crl.py:15</p> <p>Checks if a certificate is revoked using the CRL extensions.</p>"},{"location":"pki_tools/crl/#arguments","title":"Arguments","text":"<ul> <li><code>cert</code> - The certificate to check revocation for. Can either be</li> <li><code>crl_cache_seconds</code> - Specifies how long the CRL should be cached, default is 1 hour.</li> </ul>"},{"location":"pki_tools/crl/#returns","title":"Returns","text":"<p>True if the certificate is revoked, False otherwise</p>"},{"location":"pki_tools/crl/#raises","title":"Raises","text":"<ul> <li><code>exceptions.ExtensionMissing</code> - When CRL extension is missing</li> <li><code>exceptions.CrlFetchFailure</code> - When the CRL could not be fetched</li> <li><code>exceptions.CrlLoadError</code> - If CRL could be fetched successfully but could not be loaded e.g. due invalid format or file</li> <li><code>exceptions.Error</code> - If revocation check fails both with OCSP and CRL</li> </ul>"},{"location":"pki_tools/crl/#signature","title":"Signature","text":"<pre><code>def is_revoked(\ncert: Union[x509.Certificate, types.PemCert], crl_cache_seconds: int = 3600\n) -&gt; bool: ...\n</code></pre>"},{"location":"pki_tools/exceptions/","title":"Exceptions","text":"<p>Pki-tools Index / Pki Tools / Exceptions</p> <p>Auto-generated documentation for pki_tools.exceptions module.</p>"},{"location":"pki_tools/exceptions/#certloaderror","title":"CertLoadError","text":"<p>Show source in exceptions.py:9</p>"},{"location":"pki_tools/exceptions/#signature","title":"Signature","text":"<pre><code>class CertLoadError(Error): ...\n</code></pre>"},{"location":"pki_tools/exceptions/#see-also","title":"See also","text":"<ul> <li>Error</li> </ul>"},{"location":"pki_tools/exceptions/#crlfetchfailure","title":"CrlFetchFailure","text":"<p>Show source in exceptions.py:21</p>"},{"location":"pki_tools/exceptions/#signature_1","title":"Signature","text":"<pre><code>class CrlFetchFailure(Error): ...\n</code></pre>"},{"location":"pki_tools/exceptions/#see-also_1","title":"See also","text":"<ul> <li>Error</li> </ul>"},{"location":"pki_tools/exceptions/#crlloaderror","title":"CrlLoadError","text":"<p>Show source in exceptions.py:25</p>"},{"location":"pki_tools/exceptions/#signature_2","title":"Signature","text":"<pre><code>class CrlLoadError(Error): ...\n</code></pre>"},{"location":"pki_tools/exceptions/#see-also_2","title":"See also","text":"<ul> <li>Error</li> </ul>"},{"location":"pki_tools/exceptions/#error","title":"Error","text":"<p>Show source in exceptions.py:1</p>"},{"location":"pki_tools/exceptions/#signature_3","title":"Signature","text":"<pre><code>class Error(Exception): ...\n</code></pre>"},{"location":"pki_tools/exceptions/#extensionmissing","title":"ExtensionMissing","text":"<p>Show source in exceptions.py:5</p>"},{"location":"pki_tools/exceptions/#signature_4","title":"Signature","text":"<pre><code>class ExtensionMissing(Error): ...\n</code></pre>"},{"location":"pki_tools/exceptions/#see-also_3","title":"See also","text":"<ul> <li>Error</li> </ul>"},{"location":"pki_tools/exceptions/#ocspfetchfailure","title":"OcspFetchFailure","text":"<p>Show source in exceptions.py:13</p>"},{"location":"pki_tools/exceptions/#signature_5","title":"Signature","text":"<pre><code>class OcspFetchFailure(Error): ...\n</code></pre>"},{"location":"pki_tools/exceptions/#see-also_4","title":"See also","text":"<ul> <li>Error</li> </ul>"},{"location":"pki_tools/exceptions/#ocspissuerfetchfailure","title":"OcspIssuerFetchFailure","text":"<p>Show source in exceptions.py:17</p>"},{"location":"pki_tools/exceptions/#signature_6","title":"Signature","text":"<pre><code>class OcspIssuerFetchFailure(Error): ...\n</code></pre>"},{"location":"pki_tools/exceptions/#see-also_5","title":"See also","text":"<ul> <li>Error</li> </ul>"},{"location":"pki_tools/ocsp/","title":"Ocsp","text":"<p>Pki-tools Index / Pki Tools / Ocsp</p> <p>Auto-generated documentation for pki_tools.ocsp module.</p>"},{"location":"pki_tools/ocsp/#is_revoked","title":"is_revoked","text":"<p>Show source in ocsp.py:37</p> <p>Checks if a certificate is revoked using the OCSP extension.</p>"},{"location":"pki_tools/ocsp/#arguments","title":"Arguments","text":"<ul> <li><code>cert</code> - The certificate to check revocation for. Can either be a x509.Certificate or a types.PemCert string</li> <li><code>issuer_cert</code> - The issuer of the <code>cert</code>. Can be a x509.Certificate, a types.PemCert string or types.OcspIssuerUri including the URI to the issuer public cert</li> </ul>"},{"location":"pki_tools/ocsp/#returns","title":"Returns","text":"<p>True if the certificate is revoked, False otherwise</p>"},{"location":"pki_tools/ocsp/#raises","title":"Raises","text":"<ul> <li><code>exceptions.ExtensionMissing</code> - When OCSP extension is missing</li> <li><code>exceptions.OcspFetchFailure</code> - When OCSP fails preforming the check against the server</li> <li><code>exceptions.OcspIssuerFetchFailure</code> - When <code>issuer_cert</code> is of exceptions.OcspIssuerUri type and fetching the public certificate fails</li> </ul>"},{"location":"pki_tools/ocsp/#signature","title":"Signature","text":"<pre><code>def is_revoked(\ncert: [x509.Certificate, types.PemCert],\nissuer_cert: [x509.Certificate, types.PemCert, types.OcspIssuerUri],\n) -&gt; bool: ...\n</code></pre>"},{"location":"pki_tools/types/","title":"Types","text":"<p>Pki-tools Index / Pki Tools / Types</p> <p>Auto-generated documentation for pki_tools.types module.</p>"},{"location":"pki_tools/types/#ocspissueruri","title":"OcspIssuerUri","text":"<p>Show source in types.py:11</p>"},{"location":"pki_tools/types/#signature","title":"Signature","text":"<pre><code>class OcspIssuerUri(BaseModel): ...\n</code></pre>"}]}