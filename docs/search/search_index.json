{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Pki-tools Index","text":"<p>Auto-generated documentation index.</p> <p>A full list of Pki-tools project modules.</p> <p></p> <p>PKI tools exposes a high level <code>cryptography</code> API for e.g.:</p> <ul> <li>checking revocation of certificates using   OCSP   with   CRL   fallback</li> <li>loading certificates from PEM format</li> <li>parsing certificate fields</li> <li>saving certificates to files</li> <li>reading certificates from files</li> </ul>"},{"location":"#docs","title":"Docs","text":"<p>Documentation is available at: https://pki-tools.fulder.dev</p>"},{"location":"#quickstart","title":"Quickstart","text":""},{"location":"#install","title":"Install","text":"<p><code>pip install pki-tools</code></p>"},{"location":"#usage","title":"Usage","text":""},{"location":"#checking-revocation-using-ocsp-with-crl-fallback","title":"Checking revocation using OCSP with CRL fallback","text":"<pre><code>from pki_tools import is_revoked\nfrom pki_tools.types import PemCert, Chain\n\ncert_pem = \"\"\"\n-----BEGIN CERTIFICATE-----\n&lt;CERT_PEM_BYTES&gt;\n-----END CERTIFICATE-----\n\"\"\"\nissuer_cert_pem = \"\"\"\n-----BEGIN CERTIFICATE-----\n&lt;ISSUER_CERT_PEM_BYTES&gt;\n-----END CERTIFICATE-----\n\"\"\"\nchain = Chain.from_pem(issuer_cert_pem)\n\nif is_revoked(PemCert(cert_pem), chain):\n    print(\"Certificate Revoked!\")\n</code></pre> <p>For more functions see: Pki Tools</p> <ul> <li>Pki Tools<ul> <li>Crl</li> <li>Exceptions</li> <li>Ocsp</li> <li>Types<ul> <li>Certificate<ul> <li>Extensions</li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"pki_tools/","title":"Pki Tools","text":"<p>Pki-tools Index / Pki Tools</p> <p>Auto-generated documentation for pki_tools module.</p>"},{"location":"pki_tools/#cert_from_pem","title":"cert_from_pem","text":"<p>Show source in init.py:24</p> <p>Loads a certificate from a PEM string into a x509.Certificate object</p>"},{"location":"pki_tools/#arguments","title":"Arguments","text":"<ul> <li><code>cert_pem</code> - The PEM encoded certificate in string format</li> </ul>"},{"location":"pki_tools/#returns","title":"Returns","text":"<p>A x509.Certificate created from the PEM</p>"},{"location":"pki_tools/#raises","title":"Raises","text":"<p>exceptions.CertLoadError - If the certificate could not be loaded</p>"},{"location":"pki_tools/#signature","title":"Signature","text":"<pre><code>def cert_from_pem(cert_pem: str) -&gt; x509.Certificate: ...\n</code></pre>"},{"location":"pki_tools/#is_revoked","title":"is_revoked","text":"<p>Show source in init.py:125</p> <p>Checks if a certificate is revoked first using the OCSP extension and then the CRL extensions.</p> <p>Note that OCSP has precedence over CRL meaning that if OCSP check is successful this function will return the bool without checking CRL.</p> <p>Otherwise, if OCSP check fails, CRL will be tried next.</p>"},{"location":"pki_tools/#arguments_1","title":"Arguments","text":"<ul> <li><code>cert</code> - The certificate to check revocation for. Can either be a x509.Certificate or a types.PemCert string</li> <li><code>chain</code> - The CA chain including one or more certificates and the issuer of the <code>cert</code>, signer of the OCSP response and CRL issuer. See types.Chain for examples how the chain can be created</li> <li><code>crl_cache_seconds</code> - [CRL Only] Specifies how long the CRL should be cached, default is 1 hour.</li> </ul>"},{"location":"pki_tools/#returns_1","title":"Returns","text":"<p>True if the certificate is revoked, False otherwise</p>"},{"location":"pki_tools/#raises_1","title":"Raises","text":"<p>exceptions.ChainVerificationFailed -- When the Chain contains more than one certificate and the trust fails either because of some certificate has expired or some signature in the chain is invalid</p> <p>exceptions.RevokeCheckFailed -- When both OCSP and CRL checks fail</p>"},{"location":"pki_tools/#signature_1","title":"Signature","text":"<pre><code>def is_revoked(\n    cert: Union[x509.Certificate, PemCert], chain: Chain, crl_cache_seconds: int = 3600\n) -&gt; bool: ...\n</code></pre>"},{"location":"pki_tools/#is_revoked_multiple_issuers","title":"is_revoked_multiple_issuers","text":"<p>Show source in init.py:60</p> <p>Checks if a certificate is revoked first using the OCSP extension and then the CRL extensions.</p> <p>Note that OCSP has precedence over CRL meaning that if OCSP check is successful this function will return the bool without checking CRL.</p> <p>Otherwise, if OCSP check fails, CRL will be tried next.</p>"},{"location":"pki_tools/#arguments_2","title":"Arguments","text":"<ul> <li><code>cert</code> - The certificate to check revocation for. Can either be a x509.Certificate or a types.PemCert string</li> <li><code>cert_issuer</code> - The CA chain including one or more certificates and the issuer of the <code>cert</code>. See types.Chain for examples how the chain can be created</li> <li><code>ocsp_issuer</code> - The CA chain including one or more certificates used for signing of the OCSP response</li> <li><code>crl_issuer</code> - The CA chain including one or more certificates used for signing the CRL</li> <li><code>crl_cache_seconds</code> - [CRL Only] Specifies how long the CRL should be cached, default is 1 hour.</li> </ul>"},{"location":"pki_tools/#returns_2","title":"Returns","text":"<p>True if the certificate is revoked, False otherwise</p>"},{"location":"pki_tools/#raises_2","title":"Raises","text":"<p>exceptions.ChainVerificationFailed -- When the Chain contains more than one certificate and the trust fails either because of some certificate has expired or some signature in the chain is invalid</p> <p>exceptions.RevokeCheckFailed -- When both OCSP and CRL checks fail</p>"},{"location":"pki_tools/#signature_2","title":"Signature","text":"<pre><code>def is_revoked_multiple_issuers(\n    cert: Union[x509.Certificate, PemCert],\n    cert_issuer: Chain,\n    ocsp_issuer: Chain,\n    crl_issuer: Chain,\n    crl_cache_seconds: int = 3600,\n): ...\n</code></pre>"},{"location":"pki_tools/#parse_certificate","title":"parse_certificate","text":"<p>Show source in init.py:231</p> <p>Parses a certificate and returns a types.Certificate containing all the fields specified by RFC5280#Section-4.1.1</p>"},{"location":"pki_tools/#arguments_3","title":"Arguments","text":"<ul> <li><code>cert</code> - The certificate to check revocation for. Can either be a x509.Certificate or a types.PemCert string</li> </ul>"},{"location":"pki_tools/#returns_3","title":"Returns","text":"<p>A types.Certificate with all the available attributes</p>"},{"location":"pki_tools/#signature_3","title":"Signature","text":"<pre><code>def parse_certificate(cert: [x509.Certificate, PemCert]) -&gt; Certificate: ...\n</code></pre>"},{"location":"pki_tools/#pem_from_cert","title":"pem_from_cert","text":"<p>Show source in init.py:46</p> <p>Converts a cert type into a PEM string</p>"},{"location":"pki_tools/#arguments_4","title":"Arguments","text":"<ul> <li><code>cert</code> - The x509.Certificate certificate</li> </ul>"},{"location":"pki_tools/#returns_4","title":"Returns","text":"<p>A string representing the PEM encoded certificate</p>"},{"location":"pki_tools/#signature_4","title":"Signature","text":"<pre><code>def pem_from_cert(cert: x509.Certificate) -&gt; str: ...\n</code></pre>"},{"location":"pki_tools/#read_from_file","title":"read_from_file","text":"<p>Show source in init.py:195</p> <p>Reads a file containing one PEM certificate into a x509.Certificate object</p>"},{"location":"pki_tools/#arguments_5","title":"Arguments","text":"<ul> <li><code>file_path</code> - Path and filename of the PEM certificate</li> </ul>"},{"location":"pki_tools/#returns_5","title":"Returns","text":"<p>The x509.Certificate representing the certificate from file</p>"},{"location":"pki_tools/#signature_5","title":"Signature","text":"<pre><code>def read_from_file(file_path: str) -&gt; x509.Certificate: ...\n</code></pre>"},{"location":"pki_tools/#read_many_from_file","title":"read_many_from_file","text":"<p>Show source in init.py:212</p> <p>Reads a file containing one or more PEM certificate(s) into a list of x509.Certificate object</p>"},{"location":"pki_tools/#arguments_6","title":"Arguments","text":"<ul> <li><code>file_path</code> - Path and filename of the PEM certificate</li> </ul>"},{"location":"pki_tools/#returns_6","title":"Returns","text":"<p>A list of x509.Certificate representing the certificate(s) from file</p>"},{"location":"pki_tools/#signature_6","title":"Signature","text":"<pre><code>def read_many_from_file(file_path: str) -&gt; List[x509.Certificate]: ...\n</code></pre>"},{"location":"pki_tools/#save_to_file","title":"save_to_file","text":"<p>Show source in init.py:169</p> <p>Saves one or more certificate(s) into a file</p>"},{"location":"pki_tools/#arguments_7","title":"Arguments","text":"<ul> <li><code>cert</code> - A list of certificate(s) to save to the <code>file_path</code>. Can either be a list of x509.Certificate or a list of types.PemCert</li> <li><code>file_path</code> - Path and filename where to store the certificate(s)</li> </ul>"},{"location":"pki_tools/#signature_7","title":"Signature","text":"<pre><code>def save_to_file(\n    certs: Union[List[x509.Certificate], List[PemCert]], file_path: str\n): ...\n</code></pre>"},{"location":"pki_tools/#verify_signature","title":"verify_signature","text":"<p>Show source in init.py:256</p> <p>Verifies a signature of a signed entity agains the issuer certificate</p>"},{"location":"pki_tools/#arguments_8","title":"Arguments","text":"<ul> <li><code>signed</code> - The signed certificate can either be a x509.Certificate, x509.CertificateRevocationList or a x509.CertificateRevocationList</li> <li><code>issuer</code> - The issuer of the signed entity</li> </ul>"},{"location":"pki_tools/#raises_3","title":"Raises","text":"<p>exceptions.InvalidSignedType -- When the issuer has a non-supported type exceptions.SignatureVerificationFailed -- When the signature verification fails</p>"},{"location":"pki_tools/#signature_8","title":"Signature","text":"<pre><code>def verify_signature(\n    signed: [x509.Certificate, x509.CertificateRevocationList, OCSPResponse],\n    issuer: x509.Certificate,\n) -&gt; None: ...\n</code></pre>"},{"location":"pki_tools/#modules","title":"Modules","text":"<ul> <li>Crl</li> <li>Exceptions</li> <li>Ocsp</li> <li>Types</li> </ul>"},{"location":"pki_tools/crl/","title":"Crl","text":"<p>Pki-tools Index / Pki Tools / Crl</p> <p>Auto-generated documentation for pki_tools.crl module.</p>"},{"location":"pki_tools/exceptions/","title":"Exceptions","text":"<p>Pki-tools Index / Pki Tools / Exceptions</p> <p>Auto-generated documentation for pki_tools.exceptions module.</p>"},{"location":"pki_tools/exceptions/#certexpired","title":"CertExpired","text":"<p>Show source in exceptions.py:45</p>"},{"location":"pki_tools/exceptions/#signature","title":"Signature","text":"<pre><code>class CertExpired(Error): ...\n</code></pre>"},{"location":"pki_tools/exceptions/#see-also","title":"See also","text":"<ul> <li>Error</li> </ul>"},{"location":"pki_tools/exceptions/#certissuermissinginchain","title":"CertIssuerMissingInChain","text":"<p>Show source in exceptions.py:37</p>"},{"location":"pki_tools/exceptions/#signature_1","title":"Signature","text":"<pre><code>class CertIssuerMissingInChain(Error): ...\n</code></pre>"},{"location":"pki_tools/exceptions/#see-also_1","title":"See also","text":"<ul> <li>Error</li> </ul>"},{"location":"pki_tools/exceptions/#certloaderror","title":"CertLoadError","text":"<p>Show source in exceptions.py:9</p>"},{"location":"pki_tools/exceptions/#signature_2","title":"Signature","text":"<pre><code>class CertLoadError(Error): ...\n</code></pre>"},{"location":"pki_tools/exceptions/#see-also_2","title":"See also","text":"<ul> <li>Error</li> </ul>"},{"location":"pki_tools/exceptions/#crlfetchfailure","title":"CrlFetchFailure","text":"<p>Show source in exceptions.py:25</p>"},{"location":"pki_tools/exceptions/#signature_3","title":"Signature","text":"<pre><code>class CrlFetchFailure(Error): ...\n</code></pre>"},{"location":"pki_tools/exceptions/#see-also_3","title":"See also","text":"<ul> <li>Error</li> </ul>"},{"location":"pki_tools/exceptions/#crlloaderror","title":"CrlLoadError","text":"<p>Show source in exceptions.py:29</p>"},{"location":"pki_tools/exceptions/#signature_4","title":"Signature","text":"<pre><code>class CrlLoadError(Error): ...\n</code></pre>"},{"location":"pki_tools/exceptions/#see-also_4","title":"See also","text":"<ul> <li>Error</li> </ul>"},{"location":"pki_tools/exceptions/#error","title":"Error","text":"<p>Show source in exceptions.py:1</p>"},{"location":"pki_tools/exceptions/#signature_5","title":"Signature","text":"<pre><code>class Error(Exception): ...\n</code></pre>"},{"location":"pki_tools/exceptions/#extensionmissing","title":"ExtensionMissing","text":"<p>Show source in exceptions.py:5</p>"},{"location":"pki_tools/exceptions/#signature_6","title":"Signature","text":"<pre><code>class ExtensionMissing(Error): ...\n</code></pre>"},{"location":"pki_tools/exceptions/#see-also_5","title":"See also","text":"<ul> <li>Error</li> </ul>"},{"location":"pki_tools/exceptions/#invalidsignedtype","title":"InvalidSignedType","text":"<p>Show source in exceptions.py:53</p>"},{"location":"pki_tools/exceptions/#signature_7","title":"Signature","text":"<pre><code>class InvalidSignedType(Error): ...\n</code></pre>"},{"location":"pki_tools/exceptions/#see-also_6","title":"See also","text":"<ul> <li>Error</li> </ul>"},{"location":"pki_tools/exceptions/#notcompletechain","title":"NotCompleteChain","text":"<p>Show source in exceptions.py:41</p>"},{"location":"pki_tools/exceptions/#signature_8","title":"Signature","text":"<pre><code>class NotCompleteChain(Error): ...\n</code></pre>"},{"location":"pki_tools/exceptions/#see-also_7","title":"See also","text":"<ul> <li>Error</li> </ul>"},{"location":"pki_tools/exceptions/#ocspfetchfailure","title":"OcspFetchFailure","text":"<p>Show source in exceptions.py:13</p>"},{"location":"pki_tools/exceptions/#signature_9","title":"Signature","text":"<pre><code>class OcspFetchFailure(Error): ...\n</code></pre>"},{"location":"pki_tools/exceptions/#see-also_8","title":"See also","text":"<ul> <li>Error</li> </ul>"},{"location":"pki_tools/exceptions/#ocspinvalidresponsestatus","title":"OcspInvalidResponseStatus","text":"<p>Show source in exceptions.py:17</p>"},{"location":"pki_tools/exceptions/#signature_10","title":"Signature","text":"<pre><code>class OcspInvalidResponseStatus(Error): ...\n</code></pre>"},{"location":"pki_tools/exceptions/#see-also_9","title":"See also","text":"<ul> <li>Error</li> </ul>"},{"location":"pki_tools/exceptions/#ocspissuerfetchfailure","title":"OcspIssuerFetchFailure","text":"<p>Show source in exceptions.py:21</p>"},{"location":"pki_tools/exceptions/#signature_11","title":"Signature","text":"<pre><code>class OcspIssuerFetchFailure(Error): ...\n</code></pre>"},{"location":"pki_tools/exceptions/#see-also_10","title":"See also","text":"<ul> <li>Error</li> </ul>"},{"location":"pki_tools/exceptions/#revokecheckfailed","title":"RevokeCheckFailed","text":"<p>Show source in exceptions.py:33</p>"},{"location":"pki_tools/exceptions/#signature_12","title":"Signature","text":"<pre><code>class RevokeCheckFailed(Error): ...\n</code></pre>"},{"location":"pki_tools/exceptions/#see-also_11","title":"See also","text":"<ul> <li>Error</li> </ul>"},{"location":"pki_tools/exceptions/#signatureverificationfailed","title":"SignatureVerificationFailed","text":"<p>Show source in exceptions.py:49</p>"},{"location":"pki_tools/exceptions/#signature_13","title":"Signature","text":"<pre><code>class SignatureVerificationFailed(Error): ...\n</code></pre>"},{"location":"pki_tools/exceptions/#see-also_12","title":"See also","text":"<ul> <li>Error</li> </ul>"},{"location":"pki_tools/ocsp/","title":"Ocsp","text":"<p>Pki-tools Index / Pki Tools / Ocsp</p> <p>Auto-generated documentation for pki_tools.ocsp module.</p>"},{"location":"pki_tools/types/","title":"Types","text":"<p>Pki-tools Index / Pki Tools / Types</p> <p>Auto-generated documentation for pki_tools.types module.</p>"},{"location":"pki_tools/types/#chain","title":"Chain","text":"<p>Show source in init.py:70</p> <p>Chain holds a list of certificates in a chain of trust</p>"},{"location":"pki_tools/types/#attributes","title":"Attributes","text":"<ul> <li><code>certificates</code> - list of x509.Certificate</li> </ul>"},{"location":"pki_tools/types/#examples","title":"Examples","text":"<p>From File</p> <pre><code>chain = Chain.from_fle(\"/path/to/chain.pem\")\n</code></pre> <p>From PEM</p> <pre><code>pem_string=\"-----BEGIN CERTIFICATE-----....\"\nchain = Chain.from_pem_str(pem_string)\n</code></pre> <p>From URI</p> <pre><code>chain = Chain.from_uri(\"https://chain.domain/chain.pem\")\n</code></pre> <p>Using Chain</p> <pre><code>cert: x509.Certificate = ...\nchain.check_chain()\nchain.get_issuer(cert)\n</code></pre>"},{"location":"pki_tools/types/#signature","title":"Signature","text":"<pre><code>class Chain(BaseModel): ...\n</code></pre>"},{"location":"pki_tools/types/#chaincheck_chain","title":"Chain().check_chain","text":"<p>Show source in init.py:96</p> <p>Validate the chain (if it contains more than one certificate) checking expiration and signatures of all certificates in the chain</p>"},{"location":"pki_tools/types/#raises","title":"Raises","text":"<p>exceptions.NotCompleteChain -- When the chain contain only one not self-signed certificate</p> <p>exceptions.CertExpired -- If some certificate in the chain has expired</p> <p>exceptions.InvalidSignedType -- When the issuer has a non-supported type</p> <p>exceptions.SignatureVerificationFailed -- When the signature verification fails</p>"},{"location":"pki_tools/types/#signature_1","title":"Signature","text":"<pre><code>def check_chain(self): ...\n</code></pre>"},{"location":"pki_tools/types/#chainfrom_file","title":"Chain.from_file","text":"<p>Show source in init.py:181</p> <p>Creates a Chain from a file path containing one or more PEM certificate(s)</p>"},{"location":"pki_tools/types/#arguments","title":"Arguments","text":"<ul> <li><code>file_path</code> - The path to the file containing the PEM certificate(s)</li> </ul>"},{"location":"pki_tools/types/#signature_2","title":"Signature","text":"<pre><code>@classmethod\ndef from_file(cls: Type[\"Chain\"], file_path: str) -&gt; \"Chain\": ...\n</code></pre>"},{"location":"pki_tools/types/#chainfrom_pem_str","title":"Chain.from_pem_str","text":"<p>Show source in init.py:193</p> <p>Creates a Chain from a string containing one or more certificate(s) in PEM format</p>"},{"location":"pki_tools/types/#arguments_1","title":"Arguments","text":"<ul> <li><code>pem_certs</code> - A string containing one or more certificate(s)</li> </ul>"},{"location":"pki_tools/types/#signature_3","title":"Signature","text":"<pre><code>@classmethod\ndef from_pem_str(cls: Type[\"Chain\"], pem_certs: str) -&gt; \"Chain\": ...\n</code></pre>"},{"location":"pki_tools/types/#chainfrom_uri","title":"Chain.from_uri","text":"<p>Show source in init.py:205</p> <p>Creates a Chain from a str URI</p>"},{"location":"pki_tools/types/#arguments_2","title":"Arguments","text":"<ul> <li><code>chain_uri</code> - A str containing the URI where the certificate chain can be downloaded.</li> <li><code>cache_time_seconds</code> - Decides how long the chain should be cached, default is 1 month</li> </ul>"},{"location":"pki_tools/types/#signature_4","title":"Signature","text":"<pre><code>@classmethod\ndef from_uri(\n    cls: Type[\"Chain\"], uri: str, cache_time_seconds: int = CACHE_TIME_SECONDS\n) -&gt; \"Chain\": ...\n</code></pre>"},{"location":"pki_tools/types/#see-also","title":"See also","text":"<ul> <li>CACHE_TIME_SECONDS</li> </ul>"},{"location":"pki_tools/types/#chainget_issuer","title":"Chain().get_issuer","text":"<p>Show source in init.py:143</p> <p>Returns the issuer of a signed entity</p>"},{"location":"pki_tools/types/#arguments_3","title":"Arguments","text":"<ul> <li><code>signed</code> - The signed certificate can either be a x509.Certificate, x509.CertificateRevocationList or a x509.CertificateRevocationList</li> <li><code>issuer</code> - The issuer of the signed entity</li> </ul>"},{"location":"pki_tools/types/#returns","title":"Returns","text":"<p>The x509.Certificate representing the issuer of the <code>signed</code> entity</p>"},{"location":"pki_tools/types/#raises_1","title":"Raises","text":"<p>exceptions.CertIssuerMissingInChain -- When the issuer of the entitie is missing in the chain</p>"},{"location":"pki_tools/types/#signature_5","title":"Signature","text":"<pre><code>def get_issuer(\n    self, signed: [x509.Certificate, x509.CertificateRevocationList, OCSPResponse]\n) -&gt; x509.Certificate: ...\n</code></pre>"},{"location":"pki_tools/types/#chainuri","title":"ChainUri","text":"<p>Show source in init.py:53</p> <p>Describes the CA chain URI where the public certificate(s) can be downloaded</p>"},{"location":"pki_tools/types/#examples_1","title":"Examples","text":"<pre><code>ChainUri(uri=\"https://my.ca.link.com/ca.pem\")\n</code></pre>"},{"location":"pki_tools/types/#attributes_1","title":"Attributes","text":"<ul> <li><code>uri</code> - The URI for the public CA certificate(s)</li> <li><code>cache_time_seconds</code> - Specifies how long the public cert should be cached, default is 1 month.</li> </ul>"},{"location":"pki_tools/types/#signature_6","title":"Signature","text":"<pre><code>class ChainUri(BaseModel): ...\n</code></pre>"},{"location":"pki_tools/types/#pemcert","title":"PemCert","text":"<p>Show source in init.py:19</p> <p>PemCert is a string containing the PEM formatted certificate</p>"},{"location":"pki_tools/types/#examples_2","title":"Examples","text":"<pre><code>PemCert(\n    \"\"\"\n    -----BEGIN CERTIFICATE-----\n    MIICUTCCAfugAwIBAgIBADANBgkqhkiG9w0BAQQFADBXMQswCQYDVQQGEwJDTjEL\n    MAkGA1UECBMCUE4xCzAJBgNVBAcTAkNOMQswCQYDVQQKEwJPTjELMAkGA1UECxMC\n    VU4xFDASBgNVBAMTC0hlcm9uZyBZYW5nMB4XDTA1MDcxNTIxMTk0N1oXDTA1MDgx\n    NDIxMTk0N1owVzELMAkGA1UEBhMCQ04xCzAJBgNVBAgTAlBOMQswCQYDVQQHEwJD\n    TjELMAkGA1UEChMCT04xCzAJBgNVBAsTAlVOMRQwEgYDVQQDEwtIZXJvbmcgWWFu\n    ZzBcMA0GCSqGSIb3DQEBAQUAA0sAMEgCQQCp5hnG7ogBhtlynpOS21cBewKE/B7j\n    V14qeyslnr26xZUsSVko36ZnhiaO/zbMOoRcKK9vEcgMtcLFuQTWDl3RAgMBAAGj\n    gbEwga4wHQYDVR0OBBYEFFXI70krXeQDxZgbaCQoR4jUDncEMH8GA1UdIwR4MHaA\n    FFXI70krXeQDxZgbaCQoR4jUDncEoVukWTBXMQswCQYDVQQGEwJDTjELMAkGA1UE\n    CBMCUE4xCzAJBgNVBAcTAkNOMQswCQYDVQQKEwJPTjELMAkGA1UECxMCVU4xFDAS\n    BgNVBAMTC0hlcm9uZyBZYW5nggEAMAwGA1UdEwQFMAMBAf8wDQYJKoZIhvcNAQEE\n    BQADQQA/ugzBrjjK9jcWnDVfGHlk3icNRq0oV7Ri32z/+HQX67aRfgZu7KWdI+Ju\n    Wm7DCfrPNGVwFWUQOmsPue9rZBgO\n    -----END CERTIFICATE-----\n    \"\"\"\n)\n</code></pre>"},{"location":"pki_tools/types/#signature_7","title":"Signature","text":"<pre><code>class PemCert(str): ...\n</code></pre>"},{"location":"pki_tools/types/#modules","title":"Modules","text":"<ul> <li>Certificate</li> </ul>"},{"location":"pki_tools/types/certificate/","title":"Certificate","text":"<p>Pki-tools Index / Pki Tools / Types / Certificate</p> <p>Auto-generated documentation for pki_tools.types.certificate module.</p>"},{"location":"pki_tools/types/certificate/#certificate_1","title":"Certificate","text":"<p>Show source in init.py:223</p>"},{"location":"pki_tools/types/certificate/#signature","title":"Signature","text":"<pre><code>class Certificate(TbsCertificate): ...\n</code></pre>"},{"location":"pki_tools/types/certificate/#see-also","title":"See also","text":"<ul> <li>TbsCertificate</li> </ul>"},{"location":"pki_tools/types/certificate/#certificateparse_certificate","title":"Certificate.parse_certificate","text":"<p>Show source in init.py:228</p>"},{"location":"pki_tools/types/certificate/#signature_1","title":"Signature","text":"<pre><code>@classmethod\ndef parse_certificate(cls, cert: [x509.Certificate, PemCert]): ...\n</code></pre>"},{"location":"pki_tools/types/certificate/#see-also_1","title":"See also","text":"<ul> <li>PemCert</li> </ul>"},{"location":"pki_tools/types/certificate/#signaturealgorithm","title":"SignatureAlgorithm","text":"<p>Show source in init.py:116</p>"},{"location":"pki_tools/types/certificate/#signature_2","title":"Signature","text":"<pre><code>class SignatureAlgorithm(BaseModel): ...\n</code></pre>"},{"location":"pki_tools/types/certificate/#subject","title":"Subject","text":"<p>Show source in init.py:22</p> <p>Subject type describes certificate subject or issuer. The attributes are following the RFC5280#Section-4.1.2.4</p> <p>Note that every attribute is a list of string in order to support multivalued RDNs.</p>"},{"location":"pki_tools/types/certificate/#attributes","title":"Attributes","text":"<ul> <li><code>c</code> - Country Name (2.5.4.6)</li> <li><code>o</code> - Organization Name (2.5.4.10)</li> <li><code>ou</code> - Organizational Unit Name (2.5.4.11)</li> <li><code>dnq</code> - Distinguished Name Qualifier (2.5.4.46)</li> <li><code>s</code> - State Or Province Name (2.5.4.8)</li> <li><code>cn</code> - Common Name (2.5.4.3)</li> <li><code>serial</code> - Serial Number (2.5.4.5)</li> <li><code>ln</code> - Locality Name (2.5.4.7)</li> <li><code>t</code> - Title (2.5.4.12)</li> <li><code>sn</code> - Surname (2.5.4.4)</li> <li><code>gn</code> - Given Name (2.5.4.42)</li> <li><code>i</code> - Initials (2.5.4.43)</li> <li><code>p</code> - Pseudonym (2.5.4.65)</li> <li><code>gq</code> - Generation Qualifier (2.5.4.44)</li> <li><code>dc</code> - Domain Component (0.9.2342.19200300.100.1.25)</li> </ul>"},{"location":"pki_tools/types/certificate/#signature_3","title":"Signature","text":"<pre><code>class Subject(BaseModel): ...\n</code></pre>"},{"location":"pki_tools/types/certificate/#subjectfrom_cryptography","title":"Subject.from_cryptography","text":"<p>Show source in init.py:84</p>"},{"location":"pki_tools/types/certificate/#signature_4","title":"Signature","text":"<pre><code>@classmethod\ndef from_cryptography(cls, name: x509.Name): ...\n</code></pre>"},{"location":"pki_tools/types/certificate/#subjectto_crypto_name","title":"Subject().to_crypto_name","text":"<p>Show source in init.py:92</p>"},{"location":"pki_tools/types/certificate/#signature_5","title":"Signature","text":"<pre><code>def to_crypto_name(self) -&gt; x509.Name: ...\n</code></pre>"},{"location":"pki_tools/types/certificate/#subjectpublickeyinfo","title":"SubjectPublicKeyInfo","text":"<p>Show source in init.py:133</p>"},{"location":"pki_tools/types/certificate/#signature_6","title":"Signature","text":"<pre><code>class SubjectPublicKeyInfo(BaseModel): ...\n</code></pre>"},{"location":"pki_tools/types/certificate/#subjectpublickeyinfofrom_cryptography","title":"SubjectPublicKeyInfo.from_cryptography","text":"<p>Show source in init.py:139</p>"},{"location":"pki_tools/types/certificate/#signature_7","title":"Signature","text":"<pre><code>@classmethod\ndef from_cryptography(cls, cert_public_key: CertificatePublicKeyTypes): ...\n</code></pre>"},{"location":"pki_tools/types/certificate/#tbscertificate","title":"TbsCertificate","text":"<p>Show source in init.py:183</p>"},{"location":"pki_tools/types/certificate/#signature_8","title":"Signature","text":"<pre><code>class TbsCertificate(BaseModel): ...\n</code></pre>"},{"location":"pki_tools/types/certificate/#tbscertificatehex_serial","title":"TbsCertificate().hex_serial","text":"<p>Show source in init.py:205</p> <p>Parses the certificate serial into hex format</p>"},{"location":"pki_tools/types/certificate/#returns","title":"Returns","text":"<p>String representing the hex value of the certificate serial number</p>"},{"location":"pki_tools/types/certificate/#signature_9","title":"Signature","text":"<pre><code>@property\ndef hex_serial(self) -&gt; str: ...\n</code></pre>"},{"location":"pki_tools/types/certificate/#tbscertificatepublic_key","title":"TbsCertificate().public_key","text":"<p>Show source in init.py:216</p>"},{"location":"pki_tools/types/certificate/#signature_10","title":"Signature","text":"<pre><code>@property\ndef public_key(self) -&gt; bytes: ...\n</code></pre>"},{"location":"pki_tools/types/certificate/#validity","title":"Validity","text":"<p>Show source in init.py:123</p>"},{"location":"pki_tools/types/certificate/#signature_11","title":"Signature","text":"<pre><code>class Validity(BaseModel): ...\n</code></pre>"},{"location":"pki_tools/types/certificate/#modules","title":"Modules","text":"<ul> <li>Extensions</li> </ul>"},{"location":"pki_tools/types/certificate/extensions/","title":"Extensions","text":"<p>Pki-tools Index / Pki Tools / Types / Certificate / Extensions</p> <p>Auto-generated documentation for pki_tools.types.certificate.extensions module.</p>"},{"location":"pki_tools/types/certificate/extensions/#authoritykeyidentifier","title":"AuthorityKeyIdentifier","text":"<p>Show source in extensions.py:31</p>"},{"location":"pki_tools/types/certificate/extensions/#signature","title":"Signature","text":"<pre><code>class AuthorityKeyIdentifier(Extension): ...\n</code></pre>"},{"location":"pki_tools/types/certificate/extensions/#see-also","title":"See also","text":"<ul> <li>Extension</li> </ul>"},{"location":"pki_tools/types/certificate/extensions/#authoritykeyidentifierfrom_cryptography","title":"AuthorityKeyIdentifier.from_cryptography","text":"<p>Show source in extensions.py:36</p>"},{"location":"pki_tools/types/certificate/extensions/#signature_1","title":"Signature","text":"<pre><code>@classmethod\ndef from_cryptography(cls, extension: x509AuthorityKeyIdentifier): ...\n</code></pre>"},{"location":"pki_tools/types/certificate/extensions/#certificatepolicies","title":"CertificatePolicies","text":"<p>Show source in extensions.py:158</p>"},{"location":"pki_tools/types/certificate/extensions/#signature_2","title":"Signature","text":"<pre><code>class CertificatePolicies(Extension): ...\n</code></pre>"},{"location":"pki_tools/types/certificate/extensions/#see-also_1","title":"See also","text":"<ul> <li>Extension</li> </ul>"},{"location":"pki_tools/types/certificate/extensions/#extension","title":"Extension","text":"<p>Show source in extensions.py:26</p>"},{"location":"pki_tools/types/certificate/extensions/#signature_3","title":"Signature","text":"<pre><code>class Extension(BaseModel): ...\n</code></pre>"},{"location":"pki_tools/types/certificate/extensions/#extensions_1","title":"Extensions","text":"<p>Show source in extensions.py:162</p>"},{"location":"pki_tools/types/certificate/extensions/#signature_4","title":"Signature","text":"<pre><code>class Extensions(BaseModel): ...\n</code></pre>"},{"location":"pki_tools/types/certificate/extensions/#extensionsfrom_cryptography","title":"Extensions.from_cryptography","text":"<p>Show source in extensions.py:176</p>"},{"location":"pki_tools/types/certificate/extensions/#signature_5","title":"Signature","text":"<pre><code>@classmethod\ndef from_cryptography(cls, cert_extensions: x509Extensions): ...\n</code></pre>"},{"location":"pki_tools/types/certificate/extensions/#keyusage","title":"KeyUsage","text":"<p>Show source in extensions.py:98</p>"},{"location":"pki_tools/types/certificate/extensions/#signature_6","title":"Signature","text":"<pre><code>class KeyUsage(Extension): ...\n</code></pre>"},{"location":"pki_tools/types/certificate/extensions/#see-also_2","title":"See also","text":"<ul> <li>Extension</li> </ul>"},{"location":"pki_tools/types/certificate/extensions/#keyusagefrom_cryptography","title":"KeyUsage.from_cryptography","text":"<p>Show source in extensions.py:109</p>"},{"location":"pki_tools/types/certificate/extensions/#signature_7","title":"Signature","text":"<pre><code>@classmethod\ndef from_cryptography(cls, extension: x509KeyUsage): ...\n</code></pre>"},{"location":"pki_tools/types/certificate/extensions/#policyinformation","title":"PolicyInformation","text":"<p>Show source in extensions.py:154</p>"},{"location":"pki_tools/types/certificate/extensions/#signature_8","title":"Signature","text":"<pre><code>class PolicyInformation(BaseModel): ...\n</code></pre>"},{"location":"pki_tools/types/certificate/extensions/#policyqualifierinfo","title":"PolicyQualifierInfo","text":"<p>Show source in extensions.py:151</p>"},{"location":"pki_tools/types/certificate/extensions/#signature_9","title":"Signature","text":"<pre><code>class PolicyQualifierInfo(BaseModel): ...\n</code></pre>"},{"location":"pki_tools/types/certificate/extensions/#subjectkeyidentifier","title":"SubjectKeyIdentifier","text":"<p>Show source in extensions.py:79</p>"},{"location":"pki_tools/types/certificate/extensions/#signature_10","title":"Signature","text":"<pre><code>class SubjectKeyIdentifier(Extension): ...\n</code></pre>"},{"location":"pki_tools/types/certificate/extensions/#see-also_3","title":"See also","text":"<ul> <li>Extension</li> </ul>"},{"location":"pki_tools/types/certificate/extensions/#subjectkeyidentifierfrom_cryptography","title":"SubjectKeyIdentifier.from_cryptography","text":"<p>Show source in extensions.py:82</p>"},{"location":"pki_tools/types/certificate/extensions/#signature_11","title":"Signature","text":"<pre><code>@classmethod\ndef from_cryptography(cls, extension: x509SubjectKeyIdentifier): ...\n</code></pre>"}]}