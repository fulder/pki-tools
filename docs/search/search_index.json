{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Pki-tools Index","text":"<p>Auto-generated documentation index.</p> <p>A full list of Pki-tools project modules.</p> <p></p> <p>PKI tools exposes a high level <code>cryptography</code> API for e.g.:</p> <ul> <li>checking revocation of certificates:<ul> <li>using CRL defined in the x509 CRL   distribution points extension   (https://datatracker.ietf.org/doc/html/rfc5280.html#section-4.2.1.13)</li> <li>using OCSP defined in the x509 Authority Information Access extension   (https://datatracker.ietf.org/doc/html/rfc5280.html#section-4.2.2.1)</li> </ul> </li> <li>loading certificates from PEM format</li> <li>saving certificates to files</li> <li>reading certificates from files</li> </ul>"},{"location":"#docs","title":"Docs","text":"<p>Documentation is available at: https://pki-tools.fulder.dev</p>"},{"location":"#quickstart","title":"Quickstart","text":""},{"location":"#install","title":"Install","text":"<p><code>pip install pki-tools</code></p>"},{"location":"#usage","title":"Usage","text":""},{"location":"#checking-ocsp-and-crl-revocation","title":"Checking OCSP and CRL revocation","text":"<pre><code>from pki_tools import is_revoked\nfrom pki_tools.types import PemCert\ncert_pem = \"\"\"\n-----BEGIN CERTIFICATE-----\n&lt;CERT_PEM_BYTES&gt;\n-----END CERTIFICATE-----\n\"\"\"\nissuer_cert_pem = \"\"\"\n-----BEGIN CERTIFICATE-----\n&lt;ISSUER_CERT_PEM_BYTES&gt;\n-----END CERTIFICATE-----\n\"\"\"\nif is_revoked(PemCert(cert_pem), PemCert(issuer_cert_pem)):\nprint(\"Certificate Revoked!\")\n</code></pre> <p>For more functions see: Pki Tools</p> <ul> <li>Pki Tools<ul> <li>Crl</li> <li>Exceptions</li> <li>Ocsp</li> <li>Types</li> </ul> </li> </ul>"},{"location":"pki_tools/","title":"Pki Tools","text":"<p>Pki-tools Index / Pki Tools</p> <p>Auto-generated documentation for pki_tools module.</p>"},{"location":"pki_tools/#cert_from_pem","title":"cert_from_pem","text":"<p>Show source in init.py:17</p> <p>Loads a certificate from a PEM string into a x509.Certificate object</p>"},{"location":"pki_tools/#arguments","title":"Arguments","text":"<ul> <li><code>cert_pem</code> - The PEM encoded certificate in string format</li> </ul>"},{"location":"pki_tools/#returns","title":"Returns","text":"<p>A x509.Certificate created from the PEM</p>"},{"location":"pki_tools/#raises","title":"Raises","text":"<p>exceptions.CertLoadError - If the certificate could not be loaded</p>"},{"location":"pki_tools/#signature","title":"Signature","text":"<pre><code>def cert_from_pem(cert_pem: str) -&gt; x509.Certificate: ...\n</code></pre>"},{"location":"pki_tools/#is_revoked","title":"is_revoked","text":"<p>Show source in init.py:42</p> <p>Checks if a certificate is revoked using first OCSP and then CRL extensions. The <code>issuer_cert</code> argument is only needed when OCSP is available and should be checked.</p> <p>Note that OCSP has precedence to CRL meaning that if OCSP check is successful this function will return the bool without checking CRL.</p> <p>Otherwise, if OCSP check fails, CRL will be tried next.</p>"},{"location":"pki_tools/#arguments_1","title":"Arguments","text":"<ul> <li><code>cert</code> - The certificate to check revocation for. Can either be a x509.Certificate or a types.PemCert string</li> <li><code>issuer_cert</code> - [OCSP Only] The issuer of the <code>cert</code>. Can be a x509.Certificate , a types.PemCert string or types.OcspIssuerUri including the URI to the issuer public cert</li> <li><code>crl_cache_seconds</code> - [CRL Only] Specifies how long the CRL should be cached, default is 1 hour.</li> </ul>"},{"location":"pki_tools/#returns_1","title":"Returns","text":"<p>True if the certificate is revoked, False otherwise</p>"},{"location":"pki_tools/#raises_1","title":"Raises","text":"<p>exceptions.OcspFetchFailure -- When OCSP fails getting response from the the server</p> <p>exceptions.OcspInvalidResponseStatus -- When OCSP returns invalid response status</p> <p>exceptions.OcspIssuerFetchFailure -- When <code>issuer_cert</code> is of types.OcspIssuerUri type and fetching the public certificate fails</p> <p>exceptions.CrlFetchFailure -- When the CRL could not be fetched</p> <p>exceptions.CrlLoadError -- If CRL could be fetched successfully but could not be loaded e.g. due invalid format or file</p> <p>exceptions.Error -- If revocation check fails both with OCSP and CRL</p>"},{"location":"pki_tools/#signature_1","title":"Signature","text":"<pre><code>def is_revoked(\ncert: Union[x509.Certificate, types.PemCert],\nissuer_cert: Union[x509.Certificate, types.PemCert, types.OcspIssuerUri] = None,\ncrl_cache_seconds: int = 3600,\n) -&gt; bool: ...\n</code></pre>"},{"location":"pki_tools/#parse_subject","title":"parse_subject","text":"<p>Show source in init.py:156</p> <p>Parses a certificate and returns a types.Subject containing all the attributes present in RFC5280#Section-4.1.2.4</p>"},{"location":"pki_tools/#arguments_2","title":"Arguments","text":"<ul> <li><code>cert</code> - The certificate to check revocation for. Can either be a x509.Certificate or a types.PemCert string</li> </ul>"},{"location":"pki_tools/#returns_2","title":"Returns","text":"<p>A types.Subject with all the available attributes</p>"},{"location":"pki_tools/#signature_2","title":"Signature","text":"<pre><code>def parse_subject(cert: [x509.Certificate, types.PemCert]) -&gt; types.Subject: ...\n</code></pre>"},{"location":"pki_tools/#pem_from_cert","title":"pem_from_cert","text":"<p>Show source in init.py:38</p>"},{"location":"pki_tools/#signature_3","title":"Signature","text":"<pre><code>def pem_from_cert(cert: x509.Certificate) -&gt; str: ...\n</code></pre>"},{"location":"pki_tools/#read_from_file","title":"read_from_file","text":"<p>Show source in init.py:138</p> <p>Reads a file containing a PEM certificate into a x509.Certificate object</p>"},{"location":"pki_tools/#arguments_3","title":"Arguments","text":"<ul> <li><code>file_path</code> - Path and filename of the PEM certificate</li> </ul>"},{"location":"pki_tools/#returns_3","title":"Returns","text":"<p>A x509.Certificate representing the certificate from file</p>"},{"location":"pki_tools/#signature_4","title":"Signature","text":"<pre><code>def read_from_file(file_path: str) -&gt; x509.Certificate: ...\n</code></pre>"},{"location":"pki_tools/#save_to_file","title":"save_to_file","text":"<p>Show source in init.py:116</p> <p>Saves a certificate into a file</p>"},{"location":"pki_tools/#arguments_4","title":"Arguments","text":"<ul> <li><code>cert</code> - The certificate to save to the <code>file_path</code>. Can either be a x509.Certificate or a types.PemCert string</li> <li><code>file_path</code> - Path and filename where to store the certificate</li> </ul>"},{"location":"pki_tools/#signature_5","title":"Signature","text":"<pre><code>def save_to_file(cert: Union[x509.Certificate, types.PemCert], file_path: str): ...\n</code></pre>"},{"location":"pki_tools/#modules","title":"Modules","text":"<ul> <li>Crl</li> <li>Exceptions</li> <li>Ocsp</li> <li>Types</li> </ul>"},{"location":"pki_tools/crl/","title":"Crl","text":"<p>Pki-tools Index / Pki Tools / Crl</p> <p>Auto-generated documentation for pki_tools.crl module.</p>"},{"location":"pki_tools/crl/#is_revoked","title":"is_revoked","text":"<p>Show source in crl.py:15</p> <p>Checks if a certificate is revoked using the CRL extensions.</p>"},{"location":"pki_tools/crl/#arguments","title":"Arguments","text":"<ul> <li><code>cert</code> - The certificate to check revocation for. Can either be a x509.Certificate or a types.PemCert string</li> <li><code>crl_cache_seconds</code> - Specifies how long the CRL should be cached, default is 1 hour.</li> </ul>"},{"location":"pki_tools/crl/#returns","title":"Returns","text":"<p>True if the certificate is revoked, False otherwise</p>"},{"location":"pki_tools/crl/#raises","title":"Raises","text":"<p>exceptions.ExtensionMissing -- When CRL extension is missing</p> <p>exceptions.CrlFetchFailure -- When the CRL could not be fetched</p> <p>exceptions.CrlLoadError -- If CRL could be fetched successfully but could not be loaded e.g. due invalid format or file</p> <p>exceptions.Error -- If revocation check fails both with OCSP and CRL</p>"},{"location":"pki_tools/crl/#signature","title":"Signature","text":"<pre><code>def is_revoked(\ncert: Union[x509.Certificate, types.PemCert], crl_cache_seconds: int = 3600\n) -&gt; bool: ...\n</code></pre>"},{"location":"pki_tools/exceptions/","title":"Exceptions","text":"<p>Pki-tools Index / Pki Tools / Exceptions</p> <p>Auto-generated documentation for pki_tools.exceptions module.</p>"},{"location":"pki_tools/exceptions/#certloaderror","title":"CertLoadError","text":"<p>Show source in exceptions.py:9</p>"},{"location":"pki_tools/exceptions/#signature","title":"Signature","text":"<pre><code>class CertLoadError(Error): ...\n</code></pre>"},{"location":"pki_tools/exceptions/#see-also","title":"See also","text":"<ul> <li>Error</li> </ul>"},{"location":"pki_tools/exceptions/#crlfetchfailure","title":"CrlFetchFailure","text":"<p>Show source in exceptions.py:25</p>"},{"location":"pki_tools/exceptions/#signature_1","title":"Signature","text":"<pre><code>class CrlFetchFailure(Error): ...\n</code></pre>"},{"location":"pki_tools/exceptions/#see-also_1","title":"See also","text":"<ul> <li>Error</li> </ul>"},{"location":"pki_tools/exceptions/#crlloaderror","title":"CrlLoadError","text":"<p>Show source in exceptions.py:29</p>"},{"location":"pki_tools/exceptions/#signature_2","title":"Signature","text":"<pre><code>class CrlLoadError(Error): ...\n</code></pre>"},{"location":"pki_tools/exceptions/#see-also_2","title":"See also","text":"<ul> <li>Error</li> </ul>"},{"location":"pki_tools/exceptions/#error","title":"Error","text":"<p>Show source in exceptions.py:1</p>"},{"location":"pki_tools/exceptions/#signature_3","title":"Signature","text":"<pre><code>class Error(Exception): ...\n</code></pre>"},{"location":"pki_tools/exceptions/#extensionmissing","title":"ExtensionMissing","text":"<p>Show source in exceptions.py:5</p>"},{"location":"pki_tools/exceptions/#signature_4","title":"Signature","text":"<pre><code>class ExtensionMissing(Error): ...\n</code></pre>"},{"location":"pki_tools/exceptions/#see-also_3","title":"See also","text":"<ul> <li>Error</li> </ul>"},{"location":"pki_tools/exceptions/#ocspfetchfailure","title":"OcspFetchFailure","text":"<p>Show source in exceptions.py:13</p>"},{"location":"pki_tools/exceptions/#signature_5","title":"Signature","text":"<pre><code>class OcspFetchFailure(Error): ...\n</code></pre>"},{"location":"pki_tools/exceptions/#see-also_4","title":"See also","text":"<ul> <li>Error</li> </ul>"},{"location":"pki_tools/exceptions/#ocspinvalidresponsestatus","title":"OcspInvalidResponseStatus","text":"<p>Show source in exceptions.py:17</p>"},{"location":"pki_tools/exceptions/#signature_6","title":"Signature","text":"<pre><code>class OcspInvalidResponseStatus(Error): ...\n</code></pre>"},{"location":"pki_tools/exceptions/#see-also_5","title":"See also","text":"<ul> <li>Error</li> </ul>"},{"location":"pki_tools/exceptions/#ocspissuerfetchfailure","title":"OcspIssuerFetchFailure","text":"<p>Show source in exceptions.py:21</p>"},{"location":"pki_tools/exceptions/#signature_7","title":"Signature","text":"<pre><code>class OcspIssuerFetchFailure(Error): ...\n</code></pre>"},{"location":"pki_tools/exceptions/#see-also_6","title":"See also","text":"<ul> <li>Error</li> </ul>"},{"location":"pki_tools/ocsp/","title":"Ocsp","text":"<p>Pki-tools Index / Pki Tools / Ocsp</p> <p>Auto-generated documentation for pki_tools.ocsp module.</p>"},{"location":"pki_tools/ocsp/#is_revoked","title":"is_revoked","text":"<p>Show source in ocsp.py:45</p> <p>Checks if a certificate is revoked using the OCSP extension.</p>"},{"location":"pki_tools/ocsp/#arguments","title":"Arguments","text":"<ul> <li><code>cert</code> - The certificate to check revocation for. Can either be a x509.Certificate or a types.PemCert string</li> <li><code>issuer_cert</code> - The issuer of the <code>cert</code>. Can be a x509.Certificate, a types.PemCert string or types.OcspIssuerUri including the URI to the issuer public cert</li> </ul>"},{"location":"pki_tools/ocsp/#returns","title":"Returns","text":"<p>True if the certificate is revoked, False otherwise</p>"},{"location":"pki_tools/ocsp/#raises","title":"Raises","text":"<p>exceptions.ExtensionMissing -- When OCSP extension is missing</p> <p>exceptions.OcspFetchFailure -- When OCSP fails getting response from the the server</p> <p>exceptions.OcspInvalidResponseStatus -- When OCSP returns invalid response status</p> <p>exceptions.OcspIssuerFetchFailure -- When <code>issuer_cert</code> is of types.OcspIssuerUri type and fetching the public certificate fails</p>"},{"location":"pki_tools/ocsp/#signature","title":"Signature","text":"<pre><code>def is_revoked(\ncert: [x509.Certificate, types.PemCert],\nissuer_cert: [x509.Certificate, types.PemCert, types.OcspIssuerUri],\n) -&gt; bool: ...\n</code></pre>"},{"location":"pki_tools/types/","title":"Types","text":"<p>Pki-tools Index / Pki Tools / Types</p> <p>Auto-generated documentation for pki_tools.types module.</p>"},{"location":"pki_tools/types/#ocspissueruri","title":"OcspIssuerUri","text":"<p>Show source in types.py:40</p> <p>Describes the OCSP Issuer (usually a CA) URI where the public certificate can be downloaded</p>"},{"location":"pki_tools/types/#examples","title":"Examples","text":"<pre><code>OcspIssuerUri(uri=\"https://my.ca.link.com/ca.pem\")\n</code></pre>"},{"location":"pki_tools/types/#attributes","title":"Attributes","text":"<ul> <li><code>uri</code> - The URI for the public issuer certificate</li> <li><code>cache_time_seconds</code> - Specifies how long the public cert should be cached, default is 1 month.</li> </ul>"},{"location":"pki_tools/types/#signature","title":"Signature","text":"<pre><code>class OcspIssuerUri(BaseModel): ...\n</code></pre>"},{"location":"pki_tools/types/#pemcert","title":"PemCert","text":"<p>Show source in types.py:9</p> <p>PemCert is a string containing the PEM formatted certificate</p>"},{"location":"pki_tools/types/#examples_1","title":"Examples","text":"<pre><code>PemCert(\n\"\"\"\n    -----BEGIN CERTIFICATE-----\n    MIICUTCCAfugAwIBAgIBADANBgkqhkiG9w0BAQQFADBXMQswCQYDVQQGEwJDTjEL\n    MAkGA1UECBMCUE4xCzAJBgNVBAcTAkNOMQswCQYDVQQKEwJPTjELMAkGA1UECxMC\n    VU4xFDASBgNVBAMTC0hlcm9uZyBZYW5nMB4XDTA1MDcxNTIxMTk0N1oXDTA1MDgx\n    NDIxMTk0N1owVzELMAkGA1UEBhMCQ04xCzAJBgNVBAgTAlBOMQswCQYDVQQHEwJD\n    TjELMAkGA1UEChMCT04xCzAJBgNVBAsTAlVOMRQwEgYDVQQDEwtIZXJvbmcgWWFu\n    ZzBcMA0GCSqGSIb3DQEBAQUAA0sAMEgCQQCp5hnG7ogBhtlynpOS21cBewKE/B7j\n    V14qeyslnr26xZUsSVko36ZnhiaO/zbMOoRcKK9vEcgMtcLFuQTWDl3RAgMBAAGj\n    gbEwga4wHQYDVR0OBBYEFFXI70krXeQDxZgbaCQoR4jUDncEMH8GA1UdIwR4MHaA\n    FFXI70krXeQDxZgbaCQoR4jUDncEoVukWTBXMQswCQYDVQQGEwJDTjELMAkGA1UE\n    CBMCUE4xCzAJBgNVBAcTAkNOMQswCQYDVQQKEwJPTjELMAkGA1UECxMCVU4xFDAS\n    BgNVBAMTC0hlcm9uZyBZYW5nggEAMAwGA1UdEwQFMAMBAf8wDQYJKoZIhvcNAQEE\n    BQADQQA/ugzBrjjK9jcWnDVfGHlk3icNRq0oV7Ri32z/+HQX67aRfgZu7KWdI+Ju\n    Wm7DCfrPNGVwFWUQOmsPue9rZBgO\n    -----END CERTIFICATE-----\n    \"\"\"\n)\n</code></pre>"},{"location":"pki_tools/types/#signature_1","title":"Signature","text":"<pre><code>class PemCert(str): ...\n</code></pre>"},{"location":"pki_tools/types/#subject","title":"Subject","text":"<p>Show source in types.py:57</p> <p>Subject type describes certificate subject or issuer. The attributes are following the RFC5280#Section-4.1.2.4</p> <p>Note that every attribute is a list of string in order to support multivalued RDNs.</p>"},{"location":"pki_tools/types/#attributes_1","title":"Attributes","text":"<ul> <li><code>c</code> - Country Name (2.5.4.6)</li> <li><code>o</code> - Organization Name (2.5.4.10)</li> <li><code>ou</code> - Organizational Unit Name (2.5.4.11)</li> <li><code>dnq</code> - Distinguished Name Qualifier (2.5.4.46)</li> <li><code>s</code> - State Or Province Name (2.5.4.8)</li> <li><code>cn</code> - Common Name (2.5.4.3)</li> <li><code>serial</code> - Serial Number (2.5.4.5)</li> <li><code>ln</code> - Locality Name (2.5.4.7)</li> <li><code>t</code> - Title (2.5.4.12)</li> <li><code>sn</code> - Surname (2.5.4.4)</li> <li><code>gn</code> - Given Name (2.5.4.42)</li> <li><code>i</code> - Initials (2.5.4.43)</li> <li><code>p</code> - Pseudonym (2.5.4.65)</li> <li><code>gq</code> - Generation Qualifier (2.5.4.44)</li> <li><code>dc</code> - Domain Component (0.9.2342.19200300.100.1.25)</li> </ul>"},{"location":"pki_tools/types/#signature_2","title":"Signature","text":"<pre><code>class Subject(BaseModel): ...\n</code></pre>"},{"location":"pki_tools/types/#subjectto_crypto_name","title":"Subject().to_crypto_name","text":"<p>Show source in types.py:119</p>"},{"location":"pki_tools/types/#signature_3","title":"Signature","text":"<pre><code>def to_crypto_name(self) -&gt; x509.Name: ...\n</code></pre>"}]}